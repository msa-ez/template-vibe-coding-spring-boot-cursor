---

description: When proceeding with code generation according to each BoundedContext's PRD, this file must be read first to understand the code generation sequence and mandatory rules that must be followed.
alwaysApply: false
---

Generate the project according to the following requirements:

Project Generation Order
The project MUST be generated in the following order according to the prompt:

Package structure creation -> domain and infra sub-files creation -> pom.xml creation -> Application.java and application.yml creation -> fixed files creation(Dockerfile, Manifests, gateway, kafka) -> test code creation
-> test & run

File Generation Order
Please generate code sequentially based on the requirements below, dividing the requests rather than requesting everything at once:

1. Package and Import Section
    - Package declaration
    - All necessary imports

2. Class Declaration Section
    - Annotations required for the file
    - Class declaration

3. Field or Method Section
    - Field declarations or method declarations according to the role of each file

Required Response Rules:
All files must be generated according to the requirements before fixing any errors. Do not get caught in a loop by fixing errors during file generation.

Project Generation Requirements
1. When generating the project, DO NOT reference any existing files in the Root directory. Files should only be created based on the folder structure defined in the metadata.
2. The package structure MUST be created based on @package-structure
3. Technical requirements, frameworks, and architecture for project configuration MUST be created based on @technical-stack.
4. All files MUST be generated based on metadata, and MUST NOT be generated based on data not included in the metadata.
5. When creating files, follow the requirements in @domain-event-publishing-rules
6. Fixed files (gateway, kafka configuration, manifests, dockerfile, etc.) MUST be generated based on @fixed-generation-rules before test code generation. Kafka and gateway MUST be created if they do not exist in the Root directory
7. Test code should be generated by referencing @test-code-generation.rules